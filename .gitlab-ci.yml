#include:
#  - local: 'Templates/dotnet_build_template.yml'

default:
  tags:
    - main

variables:
  VERSION: '0.1'
  CONFIG: 'Release'
  PROJECT_PATH: './MovieCatalogAPI/MovieCatalogAPI.csproj'  
  TESTS_PATH: './MovieCatalogAPI.Tests/MovieCatalogAPI.Tests.csproj'
  RELEASE_BUILD_PATH: 'app/Release/'
  DEPLOY_FOLDER: 'MovieCatalogAPI'
  LOG_PATH: 'app/Tests/logs'
  TARGET_OS: "linux"
  ASPNETCORE_URLS: https://192.168.0.4:7268;http://192.168.0.4:5268

stages:
  - deploy
  - build_prod
  - build
  - test  
  

build_job:
  image: mcr.microsoft.com/dotnet/sdk:6.0-jammy-amd64
  stage: build
  script:
    - dotnet format --diagnostics $PROJECT_PATH
    - dotnet build $PROJECT_PATH -o $RELEASE_BUILD_PATH -c $CONFIG --os $TARGET_OS --version-suffix $VERSION

test_job:
  environment: test
  image: mcr.microsoft.com/dotnet/sdk:6.0-jammy-amd64
  stage: test
  variables:
    ConnectionStrings__Default: $DATABASE_CONNECTION_STRING
  only:
    - branches
  script:
    - dotnet test $TESTS_PATH --logger "trx;logfilename=testResults.trx"
    - mkdir -p $LOG_PATH
    - mv MovieCatalogAPI.Tests/TestResults/testResults.trx $LOG_PATH
  services:
    - name: redis:alpine
  artifacts:
    paths:
      - $LOG_PATH  # saving logs




build_prod_job:
  stage: build_prod
  image: mcr.microsoft.com/dotnet/sdk:6.0-jammy-amd64
  before_script:
    - ls $PROJECT_PATH
  script:
  - dotnet build $PROJECT_PATH -c $CONFIG
  - dotnet publish $PROJECT_PATH -c $CONFIG --os $TARGET_OS -o $RELEASE_BUILD_PATH --version-suffix $VERSION
  artifacts:
    expire_in: 1 week
    paths:
    - $RELEASE_BUILD_PATH
  only:
    - master
  after_script:
    - ls $RELEASE_BUILD_PATH


#docker build
build_docker:
  image: docker
  stage: build_prod
  needs: ["build_prod_job"]
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p  $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY/$CI_REGISTRY_IMAGE


deploy_job:
  image: docker
  environment: production
  variables:
    ConnectionStrings__Default: $DATABASE_CONNECTION_STRING
  stage: deploy
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p  $CI_JOB_TOKEN $CI_REGISTRY
    - docker images
    - docker pull $CI_REGISTRY/$CI_REGISTRY_IMAGE
    - docker run $CI_REGISTRY/$CI_REGISTRY_IMAGE -p 7268:1235-7800 --network "host"
  services:
    - redis:alpine
