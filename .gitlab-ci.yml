include:
  - local: 'Templates/dotnet_build_template.yml'

variables:
  VERSION: '1.0'
  CONFIG: 'Release'
  PROJECT_PATH: 'MovieCatalogAPI/MovieCatalogAPI.csproj'  
  TESTS_PATH: 'MovieCatalogAPI.Tests/MovieCatalogAPI.Tests.csproj'
  RELEASE_BUILD_PATH: 'app/Release/'
  DEPLOY_FOLDER: '/Builds'
  LOG_PATH: 'app/Tests/logs'
  TARGET_OS: "linux-x64"

default:
  tags:
    - main

stages:
  - test
  - build_prod
  - deploy

test_job:
  image: mcr.microsoft.com/dotnet/sdk:6.0-jammy-amd64
  stage: test
  only:
    - branches
  script:
    - dotnet test $TESTS_PATH --Diag $LOG_PATH/test_logs.txt
  services:
    - name: redis:alpine
  artifacts:
    paths:
      - '$LOG_PATH/test_logs.txt'  # saving logs

build:
  extends: .build_app
  stage: build_prod
  needs: ["test_job"]
  only:
    - master
  variables:
    PROJECT_PATH: $PROJECT_PATH
    VERSION_NUMBER: $VERSION
    CONFIG: $CONFIG
    OS: $TARGET_OS
    BUILD_PATH: $RELEASE_BUILD_PATH"
  script:
    - ls $RELEASE_BUILD_PATH


#docker build
build_docker:
  image: docker
  stage: build_prod
  needs: ["build_app"]
  only:
    - master
  script:
    - docker login gitlab.kupriyanov.space:5050
    - docker build -t gitlab.kupriyanov.space:5050/slava_chaunin/webapi-aspnet-movie-catalog .
    - docker push gitlab.kupriyanov.space:5050/slava_chaunin/webapi-aspnet-movie-catalog

deploy_job:
  stage: deploy
  needs: ["test_job","build_app"]
  only:
    - master
  script:
    - echo "TODO"
    #get container from container registry
    #docker up
    # login before script
    # add to enviroment variables ASPNETCORE_URLS


  dependencies:
    - build_app
    - test_job
