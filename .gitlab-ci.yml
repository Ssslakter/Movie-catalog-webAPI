include: 'Templates/build_dotnet_template.gitlab-ci.yml'

variables:
  VERSION: '1.0'
  CONFIG: 'Release'
  MAIN_PATH: './MovieCatalogAPI/MovieCatalogAPI.csproj'  
  TESTS_PATH: './MovieCatalogAPI.Tests/MovieCatalogAPI.Tests.csproj/'
  RELEASE_BUILD_PATH: 'app/Release/'
  TEST_BUILD_PATH: 'app/Tests/Release/MovieCatalogAPI.Tests.dll'
  DEPLOY_FOLDER: '/Builds'
  LOG_PATH: 'app/Tests/Tests/Release/logs'

stages:
  - build
  - test
  - deploy

build_tests:
  stage: build
  only:
    - branches
  extends: .build_dotnet
  variables:
    VERSION_NUMBER: $VERSION
    CONFIG: $CONFIG
    PROJECT_PATH: $TESTS_PATH
    EXE_FOLDER_PATH: $TEST_BUILD_PATH

  
build_app:
  stage: build
  only:
    - branches
  extends: .build_dotnet
  variables:
    VERSION_NUMBER: $VERSION
    CONFIG: $CONFIG
    PROJECT_PATH: $TESTS_PATH
    EXE_FOLDER_PATH: $TEST_BUILD_PATH


test_job:
  image: mcr.microsoft.com/dotnet/aspnet:6.0
  stage: test
  needs: ["build_tests","build_app"]
  only:
    - branches
  script:
    - 'dotnet vstest $TEST_BUILD_PATH --Diag $LOG_PATH/test_logs.txt'  # running NUnit tests
  artifacts:
    when: always  # save test results even when the task fails
    expire_in: 1 week  # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '$LOG_PATH/test_logs.txt' 
  dependencies:
    - build_tests
  services:
    - name: redis:alpine

deploy_job:
  stage: deploy
  needs: ["test_job","build_app"]
  only:
    - master
  script:
    # Compose a folder for each release based on commit tag.
    # Assuming your tag is Rev1.0.0.1, and your last commit message is 'First commit'
    # the artifact files will be copied to:
    # P:\Projects\YourApp\Builds\Rev1.0.0.1 - First commit\
    - '$commitSubject = git log -1 --pretty=%s'
    - '$deployFolder = $($env:DEPLOY_FOLDER) + "\" + $($env:CI_BUILD_TAG) + " - " + $commitSubject + "\"'

    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\YourApp.exe" "$deployFolder"'
    - 'xcopy /y ".\$env:MSI_RELEASE_FOLDER\YourApp Setup.msi" "$deployFolder"'
    - 'xcopy /y ".\TestResult.xml" "$deployFolder"'
  dependencies:
    - build_app
    - test_job
